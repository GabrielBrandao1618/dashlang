quote                = _{ "\"" }
text                 =  { (!("\"") ~ ANY)* }
string               =  { quote ~ text ~ quote }
float                = ${ "-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
int                  = ${ "-"? ~ ASCII_DIGIT+ }
boolean              =  { "true" | "false" }
symbol               = @{ !("return" | boolean) ~ ASCII_ALPHA ~ ASCII_ALPHANUMERIC* }
asignment_expression =  { symbol ~ "=" ~ (expression | value) }
binary_operator      =  { "+" | "-" | "*" | "/" | ">=" | "<=" | "==" | ">" | "<" | "||" | "&&" }
sub_expression       = _{ "(" ~ expression ~ ")" }
binary_expression    =  { (value | symbol | sub_expression) ~ (binary_operator ~ (value | sub_expression))+ }
expression           =  { binary_expression | asignment_expression | symbol }
return_stmt          =  { "return" ~ (expression | value) }
scope                =  { "{" ~ program ~ "}" }
if_stmt              =  { "if" ~ (expression | value) ~ scope }
statement            =  { return_stmt }
instruction          =  { statement | expression }
closure_param        =  { symbol }
closure_params       =  { closure_param ~ ("," ~ closure_param)* }
closure              =  { "(" ~ closure_params? ~ ")" ~ scope }
value                =  { string | float | int | boolean | closure }

program = { instruction* }

WHITESPACE = _{ " " | "\n" }
